{% import '_includes/forms' as forms %}

{% css %}
#config-includeDraftsAndRevisions-field {
    margin-bottom: 0;
}
#draft-warning {
    margin-top: 5px;
}
#config-newExisting-field {
    margin-top: 34px;
    margin-bottom: 20px;
}
{% endcss %}

{# Whether to include Drafts/Revisions #}
{% set includeDraftsAndRevisions = (trigger.config.includeDraftsAndRevisions ?? false) %}

{# Get selected Sections & Entry Types #}
{% set sections   = (trigger.config.sections ?? []) %}
{% set entryTypes = (trigger.config.entryTypes ?? []) %}

{# ========================================================================= #}

{{ forms.lightswitchField({
    id: 'config-includeDraftsAndRevisions',
    name: 'config[includeDraftsAndRevisions]',
    label: "Include Drafts & Revisions?"|t('notifier'),
    instructions: "Unless you explicitly need Drafts and/or Revisions, it's highly recommended to leave this disabled."|t('notifier'),
    offLabel: "Published Entries Only"|t('notifier'),
    onLabel: "Published Entries + Drafts/Revisions"|t('notifier'),
    on: includeDraftsAndRevisions,
    toggle: '#draft-warning',
}) }}

<p id="draft-warning"
   class="warning with-icon {{ not includeDraftsAndRevisions ? 'hidden' }}"
   style="{{ not includeDraftsAndRevisions ? 'overflow:hidden; height:0px;' }}"
>
    Enabling Drafts/Revisions may lead to unpredictable behavior.
</p>

{{ forms.selectField({
    id: 'config-newExisting',
    name: 'config[newExisting]',
    label: "First Save"|t('notifier'),
    instructions: "Activate when an entry is **first published** and/or when a published entry is **updated**."|t('notifier'),
    options: notifierOptions.triggers.newExisting,
    value: (trigger.config.newExisting ?? false)
}) }}

<div>
    <div class="user-permissions">
        <h3>Sections & Entry Types</h3>
        <div class="select-all">Select All</div>
        <ul>

            {% for sectionId,section in notifierOptions.triggers.sectionsEntryTypes %}
                <li>
                    <input type="checkbox"
                           class="checkbox"
                           id="section-{{ sectionId }}"
                           name="config[sections][]"
                           value="{{ sectionId }}"
                           {{ sectionId in sections ? 'checked=""'|raw }}
                    >
                    <label for="section-{{ sectionId }}">
                        {{ section.name }}
                    </label>
                    <ul id="section-{{ sectionId }}-nested">
                        {% set enableChildren = (sectionId in sections) %}
                        {% for typeId,type in section.entryTypes %}
                            <li>
                                <input type="checkbox"
                                       class="checkbox"
                                       id="type-{{ typeId }}"
                                       name="config[entryTypes][]"
                                       value="{{ typeId }}"
                                       {{ typeId in entryTypes ? 'checked=""'|raw }}
                                       {{ enableChildren ?: 'disabled=""'|raw }}
                                >
                                <label for="type-{{ typeId }}">
                                    {{ type }}
                                </label>
                            </li>
                        {% endfor %}
                    </ul>
                </li>
            {% endfor %}

        </ul>
    </div>
</div>
