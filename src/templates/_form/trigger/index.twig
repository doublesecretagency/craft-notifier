{% extends '_layouts/cp' %}
{% import '_includes/forms' as forms %}
{% set fullPageForm = true %}

{% do view.registerAssetBundle('craft\\web\\assets\\userpermissions\\UserPermissionsAsset') %}

{% set existing = (triggerId ?? false) %}

{% if existing %}
    {% set trigger     = notifier.getTriggerById(triggerId) %}
    {% set triggerType = notifierOptions.triggers.event[trigger.event] %}
    {% set title       = triggerType %}
{% else %}
    {% set trigger     = null %}
    {% set triggerType = null %}
    {% set title       = 'Add a New Trigger'|t('notifier') %}
{% endif %}

{% set crumbs = [
    {'label': 'Notifier'|t('notifier'), 'url': url('notifier')},
] %}

{% block actionButton %}
    <input type="submit" class="btn submit" value="{{ 'Save'|t('app') }}">
{% endblock %}

{% set content %}
    {{ actionInput('notifier/trigger/save') }}
    {{ existing ? hiddenInput('id', triggerId) }}

    <div class="flex-fields">

        {{ forms.selectField({
            label: "Trigger Event"|t('notifier'),
            instructions: "**BETA:** Only a single event type is available in beta. [Request more trigger events...](https://github.com/doublesecretagency/craft-notifier/issues/2)"|t('notifier'),
            id: 'event',
            name: 'event',
            options: notifierOptions.triggers.event,
            value: (trigger.event ?? false)
        }) }}

        <hr>

        {{ forms.selectField({
            label: "Activate when saving new or existing entries?"|t('notifier'),
            id: 'config-newExisting',
            name: 'config[newExisting]',
            options: notifierOptions.triggers.newExisting,
            value: (trigger.config.newExisting ?? false)
        }) }}

        {{ forms.lightswitchField({
            id: 'config-includeDraftsAndRevisions',
            name: 'config[includeDraftsAndRevisions]',
            label: "Include Drafts & Revisions?"|t('notifier'),
            instructions: "It's highly recommended to leave this disabled, unless you explicitly need Drafts and/or Revisions."|t('notifier'),
            offLabel: "Published Entries Only"|t('notifier'),
            onLabel: "Published Entries + Drafts/Revisions"|t('notifier'),
            on: false,
        }) }}
{#        warning: "Enabling Drafts and Revisions may lead to unpredictable behavior."|t('notifier'),#}

        <hr>

        {# Get selected Sections & Entry Types #}
        {% set sections   = (trigger.config.sections ?? []) %}
        {% set entryTypes = (trigger.config.entryTypes ?? []) %}

        <div>
            <div class="user-permissions">
                <h3>Sections & Entry Types</h3>
                <div class="select-all">Select All</div>
                <ul>

                    {% for sectionId,section in notifierOptions.triggers.sectionsEntryTypes %}
                        <li>
                            <input type="checkbox"
                                   class="checkbox"
                                   id="section-{{ sectionId }}"
                                   name="config[sections][]"
                                   value="{{ sectionId }}"
                                   {{ sectionId in sections ? 'checked=""'|raw }}
                            >
                            <label for="section-{{ sectionId }}">
                                {{ section.name }}
                            </label>
                            <ul id="section-{{ sectionId }}-nested">
                                {% set enableChildren = (sectionId in sections) %}
                                {% for typeId,type in section.entryTypes %}
                                    <li>
                                        <input type="checkbox"
                                               class="checkbox"
                                               id="type-{{ typeId }}"
                                               name="config[entryTypes][]"
                                               value="{{ typeId }}"
                                               {{ typeId in entryTypes ? 'checked=""'|raw }}
                                               {{ enableChildren ?: 'disabled=""'|raw }}
                                        >
                                        <label for="type-{{ typeId }}">
                                            {{ type }}
                                        </label>
                                    </li>
                                {% endfor %}
                            </ul>
                        </li>
                    {% endfor %}

                </ul>
            </div>
        </div>

    </div>

{% endset %}
